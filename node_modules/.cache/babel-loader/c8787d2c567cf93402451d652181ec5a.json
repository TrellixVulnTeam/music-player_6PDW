{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactDev\\\\music-player\\\\src\\\\components\\\\Player.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faAngleRight, faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { playSong } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  let {\n    currentSong,\n    isPlaying,\n    setIsPlaying,\n    audioRef,\n    songInfo,\n    setSongInfo,\n    songs,\n    setCurrentSong\n  } = _ref;\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const handleSkip = direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs[currentIndex + 1] || songs[0]);\n    }\n\n    if (direction === \"skip-back\") {\n      setCurrentSong(songs[currentIndex - 1] || songs[songs.length - 1]);\n    }\n\n    playSong(isPlaying, audioRef);\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"player\",\n        id: \"player\",\n        max: songInfo.duration,\n        min: 0,\n        onChange: dragHandler,\n        value: songInfo.currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: songInfo.duration ? getTime(songInfo.duration) : \"0:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faAngleLeft,\n        size: \"2x\",\n        className: \"previous-button\",\n        onClick: () => handleSkip(\"skip-back\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: isPlaying ? faPause : faPlay,\n        size: \"2x\",\n        className: \"play-button\",\n        onClick: playSongHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faAngleRight,\n        size: \"2x\",\n        className: \"next-button\",\n        onClick: () => handleSkip(\"skip-forward\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["D:/ReactDev/music-player/src/components/Player.js"],"names":["React","FontAwesomeIcon","faPlay","faPause","faAngleRight","faAngleLeft","playSong","Player","currentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setCurrentSong","playSongHandler","current","pause","play","handleSkip","direction","currentIndex","findIndex","song","id","length","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","duration"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faAngleRight,\r\n  faAngleLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { playSong } from \"../utils\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setCurrentSong,\r\n}) => {\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const handleSkip = (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      setCurrentSong(songs[currentIndex + 1] || songs[0]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      setCurrentSong(songs[currentIndex - 1] || songs[songs.length - 1]);\r\n    }\r\n    playSong(isPlaying, audioRef);\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <input\r\n          type=\"range\"\r\n          name=\"player\"\r\n          id=\"player\"\r\n          max={songInfo.duration}\r\n          min={0}\r\n          onChange={dragHandler}\r\n          value={songInfo.currentTime}\r\n        />\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          icon={faAngleLeft}\r\n          size=\"2x\"\r\n          className=\"previous-button\"\r\n          onClick={() => handleSkip(\"skip-back\")}\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={isPlaying ? faPause : faPlay}\r\n          size=\"2x\"\r\n          className=\"play-button\"\r\n          onClick={playSongHandler}\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faAngleRight}\r\n          size=\"2x\"\r\n          className=\"next-button\"\r\n          onClick={() => handleSkip(\"skip-forward\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}