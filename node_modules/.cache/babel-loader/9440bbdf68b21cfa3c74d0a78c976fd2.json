{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactDev\\\\music-player\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //components\n\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Mode from \"./components/Mode\";\nimport Library from \"./components/Library\"; //data\n\nimport data from \"./utils\"; //styling\n\nimport \"./styles/main.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLibraryOpen, setIsLibraryOpen] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${isDarkMode ? \"light\" : \"dark\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Mode, {\n      isDarkMode: isDarkMode,\n      setIsDarkMode: setIsDarkMode,\n      isLibraryOpen: isLibraryOpen,\n      setIsLibraryOpen: setIsLibraryOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      currentSong: currentSong,\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      songs: songs,\n      isLibraryOpen: isLibraryOpen,\n      setIsLibraryOpen: setIsLibraryOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"nGoA31QZy4dYT7Cnc0Xw6CdA29k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ReactDev/music-player/src/App.js"],"names":["React","useState","Song","Player","Mode","Library","data","App","isDarkMode","setIsDarkMode","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","isLibraryOpen","setIsLibraryOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CAEA;;AACA,OAAO,oBAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACK,IAAI,EAAL,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAACS,KAAK,CAAC,CAAD,CAAN,CAA9C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,IAAD,CAAlD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEO,UAAU,GAAG,OAAH,GAAa,MAAO,EAAjD;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,UAAU,EAAEA,UADd;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,aAAa,EAAEO,aAHjB;AAIE,MAAA,gBAAgB,EAAEC;AAJpB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEL;AAAnB;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,MAAD;AACE,MAAA,WAAW,EAAEA,WADf;AAEE,MAAA,SAAS,EAAEE,SAFb;AAGE,MAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,YARF,eAaE,QAAC,OAAD;AACE,MAAA,KAAK,EAAEL,KADT;AAEE,MAAA,aAAa,EAAEM,aAFjB;AAGE,MAAA,gBAAgB,EAAEC;AAHpB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA5BD;;GAAMV,G;;KAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\n//components\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Mode from \"./components/Mode\";\nimport Library from \"./components/Library\";\n\n//data\nimport data from \"./utils\";\n\n//styling\nimport \"./styles/main.scss\";\n\nconst App = () => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLibraryOpen, setIsLibraryOpen] = useState(true);\n\n  return (\n    <div className={`${isDarkMode ? \"light\" : \"dark\"}`}>\n      <Mode\n        isDarkMode={isDarkMode}\n        setIsDarkMode={setIsDarkMode}\n        isLibraryOpen={isLibraryOpen}\n        setIsLibraryOpen={setIsLibraryOpen}\n      />\n      <Song currentSong={currentSong} />\n      <Player\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n      />\n      <Library\n        songs={songs}\n        isLibraryOpen={isLibraryOpen}\n        setIsLibraryOpen={setIsLibraryOpen}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}